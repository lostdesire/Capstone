{"version":3,"sources":["views/dashboard/DataInterface.js","views/dashboard/ProxyAddr.js","assets/images/avatars/1.jpg","views/dashboard/UserProfile.js","views/dashboard/Dashboard.js"],"names":["axios","defaults","withCredentials","Chart","register","registerables","arr_posts","btnColors","categoryPanel","title","search_keyword","DrawChart","useState","disabledInput","disabledBtn","text","keywdBtn","setKeywdBtn","posts","setPosts","flows","getFlow","x","getX","btnColor","setColor","url","start_date","Date","end_date","chartRef","useRef","categoryClickHandler","event","btnId","target","getAttribute","selected_categories","i","length","push","get","params","then","response","flow","data","datasets","x_label","labels","catch","error","console","className","color","onClick","window","open","icon","cilMagnifyingGlass","xs","cols","md","map","item","index","id","shape","style","width","disabled","onChange","value","log","placeholder","keyword","type","variant","component","size","sm","elmt","getElementAtEvent","current","dataset_idx","datasetIndex","data_idx","ref","label","fill","backgroundColor","borderColor","options","responsive","rounded","thumbnail","src","image","cilUser","parseInt","similarity","thin","posturl","cibTwitter","radarDataset","DrawUser","profile","setProfile","dataset","avatar","avatar1","status","user","name","new","registered","country","flag","cifUs","usage","period","payment","cibCcMastercard","activity","align","hover","cilPeople","pointBackgroundColor","poingBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","option","scale","ticks","min","max","stepSize","showLabelBackdrop","backdropColor","angleLines","lineWidth","gridLines","circular","WidgetsDropdown","lazy","WidgetsBrand","Dashboard","progressGroupExample2","cilUserFemale","progressGroupExample3","cibGoogle","percent","cibFacebook","cibLinkedin","withCharts","xl","value1","value2"],"mappings":"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","file":"static/js/39.28595384.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\nimport axios from 'axios'\nimport {proxyAddr}  from './ProxyAddr'\n// import { proxyAddr } from './ProxyAddr'\n\nimport {\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CProgress,\n  CCol,\n  CRow,\n  CImage,\n  CSpinner,\n  CFormInput,\n  CInputGroup,\n} from '@coreui/react'\naxios.defaults.withCredentials = true;\n\n\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibTwitter,\n  cilCloudDownload,\n  cilUser,\n  cilMagnifyingGlass,\n} from '@coreui/icons'\n\nimport { Line, getElementAtEvent } from \"react-chartjs-2\";\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\nvar btnColors = [\n  false, false, false, false, false, false, false, false, false, false, false\n]\n\n\n//! daily, weekly, montly, year로 다양화 필요\nconst categoryPanel = [\n  {title: 'politics'},\n  {title: 'social'},\n  {title: 'economy'},\n  {title: 'fashion'},\n  {title: 'entertain'},\n  {title: 'sports'},\n  {title: 'foods'},\n  {title: 'animals'},\n  {title: 'selfies'},\n  {title: 'memes'},\n  {title: 'cartoons'},\n  {title: 'movies'},\n  {title: 'games'},\n  {title: 'landscapes'},\n]\n\n\nvar arr_posts;\nvar search_keyword = \"\";\n\nexport const DrawChart = () => {\n  const [keywdBtn, setKeywdBtn] = useState({disabledInput: false, disabledBtn: false, text: 'submit'})\n  const [posts, setPosts] = useState([])\n  const [flows, getFlow] = useState([])\n  const [x, getX] = useState([])\n  const [btnColor, setColor] = useState(btnColors)\n  const url = proxyAddr()\n  const start_date = new Date('2021-01-01')\n  const end_date = new Date('2022-02-01')\n  const chartRef = useRef();\n\n  const chartClickHandler = (event) => {\n    var elmt = getElementAtEvent(chartRef.current, event);\n    if (elmt[0]){\n      const dataset_idx = elmt[0].datasetIndex\n      const data_idx = elmt[0].index\n      console.log(arr_posts[dataset_idx][data_idx])\n      setPosts(arr_posts[dataset_idx][data_idx])\n    }\n  }\n\n  const toggleKeyword = () => {\n    if (keywdBtn.disabledInput){\n      return (\n        <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"true\"/>\n      )\n    }\n    else{\n      return (\n        <></>\n      )\n    }\n  }\n\n  const keywordInputOnchangeHandler = (event) => {\n    search_keyword = event.target.value;\n    console.log(`Input changed: ${search_keyword}`)\n  }\n\n  const keywordBtnClickhandler = (event) => {\n    if (search_keyword !== \"\"){\n      setKeywdBtn({disabledInput: true, disabledBtn: true, text: 'Loading..'})\n      console.log(search_keyword);\n      axios\n      .get(`${url}keyword-search/get`, {\n        params: {\n          start_date: start_date,\n          end_date: end_date,\n          keyword: search_keyword\n        },\n      })\n      .then((response) => {\n        console.log('get response')\n        const flow = response.data.datasets\n        getFlow(flow)\n\n        const x_label = response.data.labels\n        getX(x_label)\n\n        arr_posts = response.data.posts;\n        setKeywdBtn({disabledInput: false, disabledBtn: false, text: 'submit'})\n    })\n      .catch((error) => console.error(`keyword Search Error: ${error}`))\n    }\n    console.log('keywordBtn Clicked!')\n\n  }\n\n\n\n  const categoryClickHandler = (event) => {\n    const btnId = event.target.getAttribute('id')\n    // btnColors[btnId] = !btnColors[btnId]\n    btnColors = [ false, false, false, false, false, false, false, false, false, false, false ]\n    btnColors[btnId] = true\n    setColor(btnColors)\n    setPosts([])\n    const selected_categories = [];\n    for (var i=0; i<btnColors.length; i++){\n      if (btnColors[i])\n        selected_categories.push(i+1);\n    }\n\n    axios\n      .get(`${url}categorical-chart/get`, {\n        params: {\n          start_date: start_date,\n          end_date: end_date,\n          selected_categories: selected_categories,\n        },\n      })\n      .then((response) => {\n        const flow = response.data.datasets\n        getFlow(flow)\n\n        const x_label = response.data.labels\n        getX(x_label)\n\n        arr_posts = response.data.posts;\n      })\n      .catch((error) => console.error(`Error: ${error}`))\n  }\n\n\n\n  return (\n      <CCard className=\"mb-4\">\n      {/* <CButton color=\"warning\" onClick={() => window.open('http://localhost:6006')} className=\"d-grid gap-2\"> */}\n      <CButton color=\"warning\" onClick={() => window.open('http://ark10806.iptime.org:6006')} className=\"d-grid gap-2\">\n        <CIcon icon={cilMagnifyingGlass} />3D Plot : Visualize Clusters\n      </CButton>\n        <CCardFooter>\n          <CRow xs={{ cols: 2 }} md={{ cols: 5 }} className=\"text-center\">\n            {categoryPanel.map((item, index) => (\n                <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <CButton id={index} onClick={categoryClickHandler} className=\"text-medium-emphasis\" shape='rounded-pill' color={btnColor[index]===true ? 'success' : '#9da5b1'} style={{ width: '120px' }}>{item.title}</CButton>\n                </CCol>\n            ))}\n            </CRow>\n            <hr/>\n          {/* <CRow xs={{ cols: 2 }} md={{ cols: 2 }} className=\"text-center\"> */}\n          <div>키워드는 짧은 단어 \"Trump\" 대신 \"Donald Trump the president of United States\" 같이 문장으로 제공할 때 좋은 검색 성능을 보입니다.  </div>\n\n            <CInputGroup>\n              <CFormInput disabled={keywdBtn.disabledInput} onChange={keywordInputOnchangeHandler} placeholder=\"Search twit by your own keyword (ex. vaccination for covid-19.)\" aria-label=\"Recipient's username with two button addons\"/>\n              <CButton disabled={keywdBtn.disabledBtn} onClick={keywordBtnClickhandler} type=\"button\" color=\"secondary\" variant=\"outline\">{toggleKeyword()}{keywdBtn.text}</CButton>\n            </CInputGroup>\n          {/* </CRow> */}\n\n        </CCardFooter>\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Trends\n              </h4>\n              <div className=\"small text-medium-emphasis\">January - December 2021</div>\n              <div className=\"small text-medium-emphasis\">그래프의 각 지점을 클릭하여 관련 포스트들을 확인하실 수 있습니다.</div>\n              <div className=\"small text-medium-emphasis\">각 클러스터의 범례(legend)를 클릭하여 일부 클러스터를 보이지 않게 할 수 있습니다</div>\n              <div className=\"small text-medium-emphasis\">각 클러스터는 위의 3D Plotly 버튼을 통해 시각적으로 확인할 수 있습니다.</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              {/* <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup> */}\n            </CCol>\n          </CRow>\n\n          <Line\n            onClick={chartClickHandler}\n            ref={chartRef}\n            id=\"myChart\"\n            data={{\n              labels: x,\n              datasets: flows.map((value) => ({\n                label: value.label,\n                data: value.data,\n                fill: true,\n                backgroundColor: \"rgba(75,192,192,0.2)\",\n                borderColor: \"rgba(75,192,192,1)\"\n              })),\n          }}\n          options= {{\n            responsive: true,\n          }}\n          ></Line>\n          <br/>\n          {posts.map((item, index) => (\n            <CRow key={index}>\n              <br/>\n              <hr/>\n              <br/>\n              <CCol key=\"0\">\n                  <CImage rounded thumbnail src={item.image} width='500vw' />\n                  {/* <CImage rounded thumbnail src={item.image} width='256px' height='512hv' /> */}\n              </CCol>\n              <CCol key=\"1\">\n                <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                  <div>{item.text}</div>\n                </div>\n                <div className=\"progress-group mb-4\">\n                  <div className=\"progress-group-header\">\n                    <CIcon className=\"me-2\" icon={cilUser} size=\"lg\" />\n                    <span>Cluster Similarity</span>\n                    <span className=\"ms-auto fw-semibold\">{parseInt(item.similarity*100)}%</span>\n                  </div>\n                  <div className=\"progress-group-bars\">\n                    <CProgress thin color=\"success\" value={parseInt(item.similarity*100)} />\n                  </div>\n                </div>\n                <CButton color=\"#00aced\" onClick={() => window.open(item.posturl)} className=\"float-end\">\n                  <CIcon icon={cibTwitter} />see post\n                </CButton>\n              </CCol>\n              <br/>\n            </CRow>\n          ))}\n\n        </CCardBody>\n      </CCard>\n  )\n}\n","export const proxyAddr =  () => {\n    return \"http://ark10806.iptime.org:5000/\"\n}","export default __webpack_public_path__ + \"static/media/1.34eedf58.jpg\";","import React, { useState } from 'react'\nimport axios from 'axios'\nimport  {proxyAddr}  from './ProxyAddr'\n\naxios.defaults.withCredentials = true;\nimport {\n  CAvatar,\n  CButton,\n  CProgress,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcMastercard,\n  cifUs,\n  cilPeople,\n  cibTwitter,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\n\nimport { Radar } from \"react-chartjs-2\";\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\nvar radarDataset = []\nexport const DrawUser = () => {\n  const [profile, setProfile] = useState([])\n  const url = proxyAddr()\n\n  if (radarDataset.length === 0){\n    axios\n      .get(`${url}user-profile/get`)\n      .then((response) => {\n        // dataset [{user, data }, ]\n        radarDataset = []\n        const profileDataset = response.data.dataset\n        profileDataset.map((item, index) => (\n          radarDataset.push(\n            {\n              avatar: { src: avatar1, status: 'success' },\n              user: {\n                name: item.user,\n                new: true,\n                registered: 'Jan 1, 2021',\n                posturl: item.posturl,\n              },\n              country: { name: 'USA', flag: cifUs },\n              usage: {\n                value: 50,\n                period: 'Jun 11, 2021 - Jul 10, 2021',\n                color: 'success',\n              },\n              payment: { name: 'Mastercard', icon: cibCcMastercard },\n              activity: '10 sec ago',\n              labels: item.labels,\n              data: item.data\n            }\n          )\n        ))\n        console.log(radarDataset)\n        setProfile(radarDataset)\n      })\n      .catch((error) => console.error(`Error: ${error}`))\n  }\n\n\n  return (\n    <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n      <CTableHead color=\"light\">\n        <CTableRow>\n          <CTableHeaderCell className=\"text-center\">\n            <CIcon icon={cilPeople} />\n          </CTableHeaderCell>\n          <CTableHeaderCell>User</CTableHeaderCell>\n          <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\n          <CTableHeaderCell>Usage</CTableHeaderCell>\n        </CTableRow>\n      </CTableHead>\n      <CTableBody>\n        {profile.map((item, index) => (\n          <CTableRow v-for=\"item in tableItems\" key={index}>\n            <CTableDataCell className=\"text-center\">\n              <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\n            </CTableDataCell>\n            <CTableDataCell>\n              <div>{item.user.name}</div>\n              <div className=\"small text-medium-emphasis\">\n                <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\n                {item.user.registered}\n              </div>\n              <CButton color=\"#00aced\" onClick={() => window.open(item.user.posturl)} className=\"float-end\">\n                <CIcon icon={cibTwitter} />see user\n              </CButton>\n            </CTableDataCell>\n            <CTableDataCell className=\"text-center\">\n              <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\n            </CTableDataCell>\n            <CTableDataCell>\n              <div className=\"clearfix\">\n                <div className=\"float-start\">\n                  <strong>{item.usage.value}%</strong>\n                </div>\n                <div className=\"float-end\">\n                  <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                </div>\n              </div>\n                <div className=\"hi\">\n                  <h1>\n                    <Radar\n                      data={{\n                        labels: item.labels,\n                        datasets: [\n                          {\n                            label: \"March\",\n                            backgroundColor: \"rgba(34, 202, 236, .2)\",\n                            borderColor: \"rgba(34, 202, 236, 1)\",\n                            pointBackgroundColor: \"rgba(34, 202, 236, 1)\",\n                            poingBorderColor: \"#fff\",\n                            pointHoverBackgroundColor: \"#fff\",\n                            pointHoverBorderColor: \"rgba(34, 202, 236, 1)\",\n                            data: item.data\n                          }\n                        ]\n                      }}\n                      option={{\n                        scale: {\n                          ticks: {\n                            min: 0.0,\n                            max: 1.0,\n                            stepSize: 0.1,\n                            showLabelBackdrop: false,\n                            backdropColor: \"rgba(203, 197, 11, 1)\"\n                          },\n                          angleLines: {\n                            color: \"rgba(255, 255, 255, .3)\",\n                            lineWidth: 1\n                          },\n                          gridLines: {\n                            color: \"rgba(255, 255, 255, .3)\",\n                            circular: true\n                          }\n                        }\n                      }}\n                    ></Radar>\n                  </h1>\n                </div>\n              <CProgress thin color={item.usage.color} value={item.usage.value} />\n            </CTableDataCell>\n          </CTableRow>\n        ))}\n      </CTableBody>\n    </CTable>\n  )\n}\n","import React, { lazy } from 'react'\nimport {DrawChart} from './DataInterface'\nimport {DrawUser} from './UserProfile'\n// import axios from 'axios'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cibTwitter,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\nconst Dashboard = () => {\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n\n  return (\n    <>\n      <WidgetsDropdown />\n\n      {/* <div>실시간 데이터 처리 기능 추가 및 키워드 검색 성능 향상 중 입니다.</div> */}\n      {/* <div>키워드 검색은 \"Trump\" 대신 \"Donald Trump the president of United States\" 같이 문장으로 할 때 좋은 성능을 보입니다.</div> */}\n      {/* <div>-클러스터 시각화</div>\n      <div>-유저 프로파일링</div>  */}\n      {DrawChart()}\n\n      <WidgetsBrand withCharts />\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n              <br />\n              {DrawUser()}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}