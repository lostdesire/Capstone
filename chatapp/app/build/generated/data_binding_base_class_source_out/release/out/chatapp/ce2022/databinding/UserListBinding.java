// Generated by view binder compiler. Do not edit!
package chatapp.ce2022.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import chatapp.ce2022.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnChat;

  @NonNull
  public final Button btnHome;

  @NonNull
  public final Button btnUser;

  @NonNull
  public final LinearLayout header;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final RelativeLayout margin;

  @NonNull
  public final ConstraintLayout myProfile;

  @NonNull
  public final LinearLayout navi;

  @NonNull
  public final EditText status;

  @NonNull
  public final CircleImageView userImg;

  @NonNull
  public final EditText userName;

  @NonNull
  public final RecyclerView users;

  private UserListBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnChat,
      @NonNull Button btnHome, @NonNull Button btnUser, @NonNull LinearLayout header,
      @NonNull ImageView imageView, @NonNull RelativeLayout margin,
      @NonNull ConstraintLayout myProfile, @NonNull LinearLayout navi, @NonNull EditText status,
      @NonNull CircleImageView userImg, @NonNull EditText userName, @NonNull RecyclerView users) {
    this.rootView = rootView;
    this.btnChat = btnChat;
    this.btnHome = btnHome;
    this.btnUser = btnUser;
    this.header = header;
    this.imageView = imageView;
    this.margin = margin;
    this.myProfile = myProfile;
    this.navi = navi;
    this.status = status;
    this.userImg = userImg;
    this.userName = userName;
    this.users = users;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_chat;
      Button btnChat = ViewBindings.findChildViewById(rootView, id);
      if (btnChat == null) {
        break missingId;
      }

      id = R.id.btn_home;
      Button btnHome = ViewBindings.findChildViewById(rootView, id);
      if (btnHome == null) {
        break missingId;
      }

      id = R.id.btn_user;
      Button btnUser = ViewBindings.findChildViewById(rootView, id);
      if (btnUser == null) {
        break missingId;
      }

      id = R.id.header;
      LinearLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.margin;
      RelativeLayout margin = ViewBindings.findChildViewById(rootView, id);
      if (margin == null) {
        break missingId;
      }

      id = R.id.myProfile;
      ConstraintLayout myProfile = ViewBindings.findChildViewById(rootView, id);
      if (myProfile == null) {
        break missingId;
      }

      id = R.id.navi;
      LinearLayout navi = ViewBindings.findChildViewById(rootView, id);
      if (navi == null) {
        break missingId;
      }

      id = R.id.status;
      EditText status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.user_img;
      CircleImageView userImg = ViewBindings.findChildViewById(rootView, id);
      if (userImg == null) {
        break missingId;
      }

      id = R.id.user_name;
      EditText userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      id = R.id.users;
      RecyclerView users = ViewBindings.findChildViewById(rootView, id);
      if (users == null) {
        break missingId;
      }

      return new UserListBinding((ConstraintLayout) rootView, btnChat, btnHome, btnUser, header,
          imageView, margin, myProfile, navi, status, userImg, userName, users);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
